/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hr.algebra;

import hr.algebra.dal.RepoFactory;
import hr.algebra.dal.Repository;
import hr.algebra.model.User;
import hr.algebra.utilities.MessageUtils;
import java.util.Arrays;
import java.util.List;
import java.util.Optional;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.text.JTextComponent;

/**
 *
 * @author windsten
 */
public class LoginRegisterForm extends javax.swing.JFrame {

    private List<JTextComponent> validationLoginFields;
    private List<JTextComponent> validationRegisterFields;
    private List<JLabel> errorLoginLabels;
    private List<JLabel> errorRegisterLabels;
    
    private Repository repository;
    public static User loggedInUser;
    
    private void initRepository() throws Exception {
        repository = RepoFactory.getRepository();
    }
    
    /**
     * Creates new form LoginRegisterForm
     */
    public LoginRegisterForm() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tfUsernameLogin = new javax.swing.JTextField();
        btnLogin = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tfUsernameRegister = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btnRegister = new javax.swing.JButton();
        lbUsernameLoginError = new javax.swing.JLabel();
        lbPasswordLoginError = new javax.swing.JLabel();
        lbUsernameRegisterError = new javax.swing.JLabel();
        lbPasswordRegisterError = new javax.swing.JLabel();
        lbPasswordDoesntMatchError = new javax.swing.JLabel();
        lbUserAlreadyExistsError = new javax.swing.JLabel();
        cbAdmin = new java.awt.Checkbox();
        lbIncorrectUsernameOrPassword = new javax.swing.JLabel();
        pfPasswordRegister = new javax.swing.JPasswordField();
        pfConfirmPasswordRegister = new javax.swing.JPasswordField();
        pfPasswordLogin = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Login");

        jLabel2.setText("Username");

        jLabel3.setText("Password");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Register");

        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        jLabel5.setText("Username");

        jLabel6.setText("Password");

        jLabel7.setText("Confirm Password");

        btnRegister.setText("Register");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        lbUsernameLoginError.setForeground(new java.awt.Color(255, 0, 51));
        lbUsernameLoginError.setText("X");

        lbPasswordLoginError.setForeground(new java.awt.Color(255, 0, 51));
        lbPasswordLoginError.setText("X");

        lbUsernameRegisterError.setForeground(new java.awt.Color(255, 0, 51));
        lbUsernameRegisterError.setText("X");

        lbPasswordRegisterError.setForeground(new java.awt.Color(255, 0, 51));
        lbPasswordRegisterError.setText("X");

        lbPasswordDoesntMatchError.setForeground(new java.awt.Color(255, 0, 51));
        lbPasswordDoesntMatchError.setText("Password doesn't match");

        lbUserAlreadyExistsError.setForeground(new java.awt.Color(255, 0, 51));
        lbUserAlreadyExistsError.setText("User Already Exists");

        cbAdmin.setLabel("Admin");

        lbIncorrectUsernameOrPassword.setForeground(new java.awt.Color(255, 0, 0));
        lbIncorrectUsernameOrPassword.setText("Incorret Username or Password");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tfUsernameLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lbUsernameLoginError))
                    .addComponent(btnLogin)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbIncorrectUsernameOrPassword)
                            .addComponent(pfPasswordLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbPasswordLoginError)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(cbAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbUserAlreadyExistsError)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tfUsernameRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(pfPasswordRegister))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbUsernameRegisterError)
                            .addComponent(lbPasswordRegisterError, javax.swing.GroupLayout.DEFAULT_SIZE, 13, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lbPasswordDoesntMatchError)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(pfConfirmPasswordRegister, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnRegister)
                                        .addGap(110, 110, 110)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbUserAlreadyExistsError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5))
                        .addGap(148, 148, 148))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(tfUsernameRegister, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbUsernameRegisterError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(tfUsernameLogin)
                                .addComponent(lbUsernameLoginError)))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pfPasswordLogin, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lbPasswordLoginError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pfPasswordRegister, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbPasswordRegisterError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbIncorrectUsernameOrPassword)
                            .addComponent(jLabel7))))
                .addComponent(pfConfirmPasswordRegister, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(lbPasswordDoesntMatchError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRegister, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnLogin, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        if(!formLoginValid()){
            return;
        }
        try{
            
            if( repository.authenticateUser(
                        tfUsernameLogin.getText().trim(), 
                        pfPasswordLogin.getPassword()
                )
            ){
                Optional<User> optUser = repository.getUserByUsername(tfUsernameLogin.getText().trim());
                if(optUser.isPresent()){
                    loggedInUser = optUser.get();
                            
                    MovieArticle movieArticle = new MovieArticle(loggedInUser);
                    movieArticle.setVisible(true);

                    this.dispose();
                }
            }else{
                lbIncorrectUsernameOrPassword.setVisible(true);
                return;
            }
            
        }   catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null,"An unexpected error occurred!\n" + e.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        if(!formRegisterValid()){
            return;
        }
        try{
            String roleName;
            if(cbAdmin.getState()){
                roleName = "Admin";
            }else{
                roleName = "User";
            }
            
            User user = new User(
                    tfUsernameRegister.getText().trim(),
                    pfPasswordRegister.getPassword(),
                    roleName
            );
            
            repository.createUser(user);
            
            JOptionPane.showMessageDialog(null, "Successful registration :)");
            emptyRegisterFields();
        }   catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null,"An unexpected error occurred!\n" + e.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnRegisterActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginRegisterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginRegisterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginRegisterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginRegisterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginRegisterForm().setVisible(true);
            }
        });
    }
    
    private void initValidation() {
        validationLoginFields = Arrays.asList(
                tfUsernameLogin,
                pfPasswordLogin
        );
        validationRegisterFields = Arrays.asList(
                tfUsernameRegister,
                pfPasswordRegister,
                pfConfirmPasswordRegister
        );
        errorLoginLabels = Arrays.asList(
                lbUsernameLoginError,
                lbPasswordLoginError,
                lbIncorrectUsernameOrPassword
        );
        errorRegisterLabels = Arrays.asList(
                lbUsernameRegisterError,
                lbPasswordRegisterError,
                lbPasswordDoesntMatchError,
                lbUserAlreadyExistsError
        );
    }
    
    private void hideLoginErrors() {
        errorLoginLabels.forEach(e -> e.setVisible(false));
    }
    
    private void hideRegisterErrors() {
        errorRegisterLabels.forEach(e -> e.setVisible(false));
    }
    
    private void emptyLoginFields(){
        validationLoginFields.forEach(e -> e.setText(""));
    }
    
    private void emptyRegisterFields(){
        validationRegisterFields.forEach(e -> e.setText(""));
    }
    
    private void init() {
        try {
            initValidation();
            hideLoginErrors();
            hideRegisterErrors();
            initRepository();
        } catch (Exception ex) {
            MessageUtils.showErrorMessage("Unrecoverable error", "Cannot initiate the form");
            System.exit(1);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnRegister;
    private java.awt.Checkbox cbAdmin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel lbIncorrectUsernameOrPassword;
    private javax.swing.JLabel lbPasswordDoesntMatchError;
    private javax.swing.JLabel lbPasswordLoginError;
    private javax.swing.JLabel lbPasswordRegisterError;
    private javax.swing.JLabel lbUserAlreadyExistsError;
    private javax.swing.JLabel lbUsernameLoginError;
    private javax.swing.JLabel lbUsernameRegisterError;
    private javax.swing.JPasswordField pfConfirmPasswordRegister;
    private javax.swing.JPasswordField pfPasswordLogin;
    private javax.swing.JPasswordField pfPasswordRegister;
    private javax.swing.JTextField tfUsernameLogin;
    private javax.swing.JTextField tfUsernameRegister;
    // End of variables declaration//GEN-END:variables

    private boolean formLoginValid() {
        hideLoginErrors();
        boolean ok = true;

        for (int i = 0; i < validationLoginFields.size(); i++) {
            ok &= !validationLoginFields.get(i).getText().trim().isEmpty();
            errorLoginLabels.get(i).setVisible(validationLoginFields.get(i).getText().trim().isEmpty());

        }
        return ok;
    }

    private boolean formRegisterValid() {
        hideRegisterErrors();
        boolean ok = true;

        for (int i = 0; i < validationRegisterFields.size(); i++) {
            ok &= !validationRegisterFields.get(i).getText().trim().isEmpty();
            errorRegisterLabels.get(i).setVisible(validationRegisterFields.get(i).getText().trim().isEmpty());

        }
        
        char[] password = pfPasswordRegister.getPassword();
        char[] confirmPassword = pfConfirmPasswordRegister.getPassword();
        
        if(!java.util.Arrays.equals(password, confirmPassword)){
            lbPasswordDoesntMatchError.setVisible(true);
            ok = false;
        }
        
        if(ok == false){
            return ok;
        }
        
        try{
            if(!repository.getUserByUsername(tfUsernameRegister.getText().trim()).isEmpty()){
                lbUserAlreadyExistsError.setVisible(true);
                ok = false;
            }   
        }catch (Exception ex) {
            ex.printStackTrace();
            ok = false;
        }
        return ok;
    }
}
